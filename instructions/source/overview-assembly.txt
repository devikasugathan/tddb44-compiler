L4:                 ; FOO
          ; PROLOGUE (FOO)
          push      rbp
          mov       rcx, rsp
          push      [rbp-8]
          push      rcx
          mov       rbp, rcx
          sub       rsp, 56
          ; QUAD 1:     q_iload    0          -          $1
          mov       rax, 0
          mov       rcx, [rbp-16]
          mov       [rcx-24], rax
          ; QUAD 2:     q_ilt      X          $1         $2
          mov       rcx, [rbp-16]
          mov       rax, [rcx+16]
          mov       rcx, [rbp-16]
          mov       rcx, [rcx-24]
          cmp       rax, rcx
          jl        L8
          mov       rax, 0
          jmp       L9
          L8:
          mov       rax, 1
          L9:
          mov       rcx, [rbp-16]
          mov       [rcx-32], rax
          ; QUAD 3:     q_jmpf     6          $2         -
          mov       rcx, [rbp-16]
          mov       rax, [rcx-32]
          cmp       rax, 0
          je        L6
          ; QUAD 4:     q_iload    2          -          $3
          mov       rax, 2
          mov       rcx, [rbp-16]
          mov       [rcx-40], rax
          ; QUAD 5:     q_imult    $3         X          $4
          mov       rcx, [rbp-16]
          mov       rax, [rcx-40]
          mov       rcx, [rbp-16]
          mov       rcx, [rcx+16]
          imul      rax, rcx
          mov       rcx, [rbp-16]
          mov       [rcx-48], rax
          ; QUAD 6:     q_iuminus  $4         -          $5
          mov       rcx, [rbp-16]
          mov       rax, [rcx-48]
          neg       rax
          mov       rcx, [rbp-16]
          mov       [rcx-56], rax
          ; QUAD 7:     q_ireturn  5          $5         -
          mov       rcx, [rbp-16]
          mov       rax, [rcx-56]
          jmp       L5
          ; QUAD 8:     q_jmp      7          -          -
          jmp       L7
L6:
          ; QUAD 9:     q_labl     6          -          -
          ; QUAD 10:     q_iload    2          -          $6
          mov       rax, 2
          mov       rcx, [rbp-16]
          mov       [rcx-64], rax
          ; QUAD 11:     q_imult    $6         X          $7
          mov       rcx, [rbp-16]
          mov       rax, [rcx-64]
          mov       rcx, [rbp-16]
          mov       rcx, [rcx+16]
          imul      rax, rcx
          mov       rcx, [rbp-16]
          mov       [rcx-72], rax
          ; QUAD 12:     q_ireturn  5          $7         -
          mov       rcx, [rbp-16]
          mov       rax, [rcx-72]
          jmp       L5
L7:
          ; QUAD 13:     q_labl     7          -          -
L5:
          ; QUAD 14:     q_labl     5          -          -
          ; EPILOGUE (FOO)
          leave
          ret
